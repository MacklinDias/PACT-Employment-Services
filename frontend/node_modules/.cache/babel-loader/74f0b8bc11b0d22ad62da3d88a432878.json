{"ast":null,"code":"import _defineProperty from \"/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/src/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport PreLoader from './PreLoader';\nimport MainBanner from './MainBanner';\nimport Services from './Services';\nimport ContactUs from './ContactUs';\nimport Description from './Description';\nimport Owners from './Owners';\nimport Stats from './Stats';\nimport Testimonials from './Testimonials';\nimport Clients from './Clients';\nimport Footer from './Footer';\nimport AppContext from './AppContext';\nimport Signin from './Signin';\n\nconst App = () => {\n  const _useState = useState({\n    posts: [],\n    postsLoaded: false,\n    loadMore: false\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState({\n    user: {},\n    loggedIn: sessionStorage.getItem('jwt') ? 'true' : 'false'\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        globalState = _useState4[0],\n        setGlobalState = _useState4[1];\n\n  useEffect(() => {\n    if (!state.postsLoaded) {\n      // Make fetch request to backend\n      fetch('http://localhost:3000/posts') // Run .json() to convert the backend response\n      .then(response => response.json()) // Change the state for posts array\n      .then(json => {\n        setState(_objectSpread({}, state, {\n          posts: json,\n          postsLoaded: true\n        }));\n      }).catch(e => console.log('error', e));\n    }\n  });\n  return React.createElement(AppContext.Provider, {\n    value: [globalState, setGlobalState],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(MainBanner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Services, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(ContactUs, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(Owners, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(Stats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }), React.createElement(Testimonials, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(Clients, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/src/App.js"],"names":["React","useState","useEffect","Header","PreLoader","MainBanner","Services","ContactUs","Description","Owners","Stats","Testimonials","Clients","Footer","AppContext","Signin","App","posts","postsLoaded","loadMore","state","setState","user","loggedIn","sessionStorage","getItem","globalState","setGlobalState","fetch","then","response","json","catch","e","console","log"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AAOA,MAAMC,GAAG,GAAG,MAAM;AAAA,oBAGUf,QAAQ,CAChC;AACIgB,IAAAA,KAAK,EAAE,EADX;AAEIC,IAAAA,WAAW,EAAE,KAFjB;AAGIC,IAAAA,QAAQ,EAAE;AAHd,GADgC,CAHlB;AAAA;AAAA,QAGTC,KAHS;AAAA,QAGFC,QAHE;;AAAA,qBAWoBpB,QAAQ,CAC5C;AACIqB,IAAAA,IAAI,EAAE,EADV;AAEIC,IAAAA,QAAQ,EAAEC,cAAc,CAACC,OAAf,CAAuB,KAAvB,IAAgC,MAAhC,GAAyC;AAFvD,GAD4C,CAX5B;AAAA;AAAA,QAWXC,WAXW;AAAA,QAWEC,cAXF;;AAoBlBzB,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAACkB,KAAK,CAACF,WAAV,EAAuB;AACnB;AACAU,MAAAA,KAAK,CAAC,6BAAD,CAAL,CACA;AADA,OAECC,IAFD,CAEMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAFlB,EAGA;AAHA,OAICF,IAJD,CAIME,IAAI,IAAE;AACRV,QAAAA,QAAQ,mBACDD,KADC;AAEJH,UAAAA,KAAK,EAAEc,IAFH;AAGJb,UAAAA,WAAW,EAAE;AAHT,WAAR;AAKH,OAVD,EAWCc,KAXD,CAWOC,CAAC,IAAEC,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,CAArB,CAXV;AAYH;AACJ,GAhBQ,CAAT;AAqBE,SACE,oBAAC,UAAD,CAAY,QAAZ;AAAqB,IAAA,KAAK,EAAE,CAACP,WAAD,EAAcC,cAAd,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,EAII,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAKI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,EAMI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANJ,EAOI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,EAQI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EASI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATJ,EAUI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAWI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,EAYI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZJ,CADA,CADF;AAwCD,CAjFD;;AAqFA,eAAeX,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport PreLoader from './PreLoader';\nimport MainBanner from './MainBanner';\nimport Services from './Services';\nimport ContactUs from './ContactUs';\nimport Description from './Description';\nimport Owners from './Owners';\nimport Stats from './Stats';\nimport Testimonials from './Testimonials';\nimport Clients from './Clients';\nimport Footer from './Footer';\nimport AppContext from './AppContext'\nimport Signin from './Signin'\n\n\n\n\n\n\nconst App = () => {\n\n\n  const [state, setState] = useState(\n    {\n        posts: [],\n        postsLoaded: false,\n        loadMore: false\n    }\n)\n\nconst [globalState, setGlobalState] = useState(\n  {\n      user: {},\n      loggedIn: sessionStorage.getItem('jwt') ? 'true' : 'false'\n  }\n)\n\n\n\nuseEffect(()=>{\n    if(!state.postsLoaded) {\n        // Make fetch request to backend\n        fetch('http://localhost:3000/posts')\n        // Run .json() to convert the backend response\n        .then(response => response.json())\n        // Change the state for posts array\n        .then(json=>{\n            setState({ \n                ...state, \n                posts: json,\n                postsLoaded: true\n            })\n        })\n        .catch(e=>console.log('error', e))\n    }\n});\n\n\n\n\n  return (\n    <AppContext.Provider value={[globalState, setGlobalState]}>\n    <div className=\"App\">\n    \n    \n        <Header />\n        <MainBanner />\n        <Services />\n        <ContactUs />\n        <Description />\n        <Owners />\n        <Stats />\n        <Testimonials />\n        <Clients />\n        <Footer />\n   \n\n       \n\n{/* { \nglobalState.loggedIn === 'true' && \n    <div className=\"container\">        \n        { \n            state.posts.map(\n                (post)=><Posts \n                image={post.image}\n                title={post.username}\n                description={post.comment}\n                buttonLabel=\"Read more\"\n                />\n            )\n        }\n    </div>\n} */}\n\n    </div>\n\n    </AppContext.Provider>\n\n  );\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}