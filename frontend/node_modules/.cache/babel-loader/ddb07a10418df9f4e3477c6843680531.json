{"ast":null,"code":"import _defineProperty from \"/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/src/ApplyButton.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport AppContext from './AppContext';\n\nconst ApplyButton = () => {\n  const _useState = useState({\n    status: 'logged-out',\n    label: 'Apply'\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useContext = useContext(AppContext),\n        _useContext2 = _slicedToArray(_useContext, 2),\n        globalState = _useContext2[0],\n        setGlobalState = _useContext2[1];\n\n  const loginHandler = () => {\n    if (state.status === 'logged-in') {\n      setState(_objectSpread({}, state, {\n        status: 'logged-out',\n        label: 'Apply'\n      }));\n      setGlobalState(_objectSpread({}, globalState, {\n        loggedIn: 'false'\n      }));\n    } else {\n      setState(_objectSpread({}, state, {\n        status: 'logged-in',\n        label: 'Applied'\n      }));\n      setGlobalState(_objectSpread({}, globalState, {\n        loggedIn: 'true'\n      }));\n    }\n  };\n\n  return React.createElement(\"button\", {\n    onClick: loginHandler,\n    className: \"btnn btn-prime\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, state.label);\n};\n\nexport default ApplyButton;","map":{"version":3,"sources":["/Users/macklindias/Documents/Macklin/FrontEnd/my-reactapp/src/ApplyButton.js"],"names":["React","useState","useContext","AppContext","ApplyButton","status","label","state","setState","globalState","setGlobalState","loginHandler","loggedIn"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA,oBAEIH,QAAQ,CAC9B;AACII,IAAAA,MAAM,EAAE,YADZ;AAEIC,IAAAA,KAAK,EAAE;AAFX,GAD8B,CAFZ;AAAA;AAAA,QAEfC,KAFe;AAAA,QAERC,QAFQ;;AAAA,sBASgBN,UAAU,CAACC,UAAD,CAT1B;AAAA;AAAA,QASfM,WATe;AAAA,QASFC,cATE;;AAWtB,QAAMC,YAAY,GAAG,MAAM;AACxB,QAAGJ,KAAK,CAACF,MAAN,KAAiB,WAApB,EAAiC;AAC5BG,MAAAA,QAAQ,mBACDD,KADC;AAEJF,QAAAA,MAAM,EAAE,YAFJ;AAGJC,QAAAA,KAAK,EAAE;AAHH,SAAR;AAMAI,MAAAA,cAAc,mBACPD,WADO;AAEVG,QAAAA,QAAQ,EAAE;AAFA,SAAd;AAKH,KAZF,MAYQ;AACHJ,MAAAA,QAAQ,mBACDD,KADC;AAEJF,QAAAA,MAAM,EAAE,WAFJ;AAGJC,QAAAA,KAAK,EAAE;AAHH,SAAR;AAMAI,MAAAA,cAAc,mBACPD,WADO;AAEVG,QAAAA,QAAQ,EAAE;AAFA,SAAd;AAIH;AAEJ,GA1BD;;AA4BA,SACI;AAAQ,IAAA,OAAO,EAAED,YAAjB;AAA+B,IAAA,SAAS,EAAC,gBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMJ,KAAK,CAACD,KADZ,CADJ;AAKH,CA5CD;;AA8CA,eAAeF,WAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport AppContext from './AppContext';\n\nconst ApplyButton = () => {\n\n    const [state, setState] = useState(\n        {\n            status: 'logged-out',\n            label: 'Apply'\n        }\n    )\n\n    const [globalState, setGlobalState] = useContext(AppContext);\n\n    const loginHandler = () => {\n       if(state.status === 'logged-in') {\n            setState({\n                ...state, \n                status: 'logged-out',\n                label: 'Apply'\n            });\n\n            setGlobalState({\n                ...globalState,\n                loggedIn: 'false'\n            })\n\n        } else {\n            setState({\n                ...state, \n                status: 'logged-in',\n                label: 'Applied'\n            });\n\n            setGlobalState({\n                ...globalState,\n                loggedIn: 'true'\n            })\n        }\n        \n    }\n\n    return(\n        <button onClick={loginHandler} className=\"btnn btn-prime\">\n            { state.label }\n        </button>\n    )\n}\n\nexport default ApplyButton;"]},"metadata":{},"sourceType":"module"}